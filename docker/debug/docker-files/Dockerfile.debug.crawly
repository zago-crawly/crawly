# Attribution
# Source: https://github.com/haizaar/docker-python-minimal
# This Dockerfile is super-slim python/nginx-unit build 
# Official nginx-unit builds weights ~1000Mb and uses Debian as base image
# This build will weight 120Mb. 
# Still WIP


FROM --platform=linux/amd64 python:3.11-alpine as builder
# ------
RUN apk add --no-cache binutils py3-pip
RUN find /usr/local -name '*.so' | xargs strip -s
RUN pip uninstall -y pip
RUN set -ex RUN  \
    cd /usr/local/lib/python*/config-*-x86_64-linux-gnu/ RUN  \
    rm -rf *.o *.a
RUN rm -rf /usr/local/lib/python*/ensurepip
RUN rm -rf /usr/local/lib/python*/idlelib
RUN rm -rf /usr/local/lib/python*/distutils/command
RUN rm -rf /usr/local/lib/python*/lib2to3
RUN rm -rf /usr/local/lib/python*/__pycache__/*
RUN find /usr/local/include/python* -not -name pyconfig.h -type f -exec rm {} \;
RUN find /usr/local/bin -not -name 'python*' \( -type f -o -type l \) -exec rm {} \;
RUN rm -rf /usr/local/share/*
RUN apk del binutils
RUN pip3 install pipenv --break-system-packages
# ------
WORKDIR /usr/src
# ------
COPY src/Pipfile /usr/src/
# ------
RUN PIPENV_VENV_IN_PROJECT=1 pipenv install --deploy
# ------
RUN mkdir log
RUN chmod -R 777 log/
COPY src/__init__.py /usr/src/
# ------
RUN mkdir common
RUN mkdir scheduler
RUN mkdir item_storage
RUN mkdir postprocessor
RUN mkdir schema_storage
RUN mkdir signal
RUN mkdir spider
RUN mkdir template_storage
# ------
FROM --platform=linux/amd64 alpine:latest as final
# ------
ENV LANG C.UTF-8
RUN apk add --no-cache py3-pip libbz2 expat libffi-dev xz-libs sqlite-libs readline ca-certificates unit-python3 curl unit
RUN pip3 install watchdog --break-system-packages
COPY --from=builder /usr/local/ /usr/local/
COPY --from=builder /usr/src/ /usr/src/
WORKDIR /usr/src
# ------
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1
ENV PYTHONPATH=/usr/src
# ------
COPY ["/docker/debug/docker-files/config_nginx_unit.debug.crawly.json", "/docker-entrypoint.d/"]
COPY ["/docker/debug/docker-files/docker-entrypoint.sh", "/usr/local/bin/"]
COPY ["/docker/debug/docker-files/change_observer.py", "/usr/local/"]
COPY ["/docker/debug/docker-files/nginx_server_controller.py", "/usr/local/"]
RUN chmod 755 /usr/local/bin/docker-entrypoint.sh
# RUN python3 /usr/local/change_observer.py
ENTRYPOINT ["/usr/local/bin/docker-entrypoint.sh"]

EXPOSE 80
CMD ["unitd", "--no-daemon", "--control", "unix:/var/run/control.unit.sock"]
